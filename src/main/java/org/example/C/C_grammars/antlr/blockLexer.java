// Generated from java-escape by ANTLR 4.11.1
package org.example.C.C_grammars.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class blockLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, WS=15, NEWLINE=16, Type=17, 
		INT=18, TWO_OP=19, STRING=20, LINE_COMMENT=21, COMMENT=22, ID=23;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "WS", "NEWLINE", "Type", 
			"INT", "TWO_OP", "STRING", "ESC", "LINE_COMMENT", "COMMENT", "ID"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'{'", "'\\n'", "'}'", "'['", "']'", "'('", "')'", "'if'", "'else'", 
			"'while'", "'='", "';'", "'for'", "','"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, "WS", "NEWLINE", "Type", "INT", "TWO_OP", "STRING", 
			"LINE_COMMENT", "COMMENT", "ID"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public blockLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "block.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0017\u00be\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\u000e\u0004\u000eY\b\u000e\u000b\u000e\f\u000e"+
		"Z\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0003\u0010\u007f\b\u0010"+
		"\u0001\u0011\u0001\u0011\u0005\u0011\u0083\b\u0011\n\u0011\f\u0011\u0086"+
		"\t\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0003\u0012\u0090\b\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0005\u0013\u0095\b\u0013\n\u0013\f\u0013\u0098\t\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0005\u0015\u00a3\b\u0015\n\u0015"+
		"\f\u0015\u00a6\t\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016"+
		"\u0001\u0016\u0001\u0016\u0005\u0016\u00ae\b\u0016\n\u0016\f\u0016\u00b1"+
		"\t\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0017\u0001\u0017\u0005\u0017\u00ba\b\u0017\n\u0017\f\u0017\u00bd\t\u0017"+
		"\u0003\u0096\u00a4\u00af\u0000\u0018\u0001\u0001\u0003\u0002\u0005\u0003"+
		"\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015"+
		"\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012"+
		"%\u0013\'\u0014)\u0000+\u0015-\u0016/\u0017\u0001\u0000\t\u0003\u0000"+
		"\t\n\r\r  \u0003\u0000\n\n\r\r??\u0001\u000019\u0001\u000009\u0002\u0000"+
		"<<>>\u0003\u0000*+--//\u0006\u0000\"\"\\\\bbnnrrtt\u0003\u0000AZ__az\u0004"+
		"\u000009AZ__az\u00cd\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000+\u0001"+
		"\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000"+
		"\u0000\u00011\u0001\u0000\u0000\u0000\u00033\u0001\u0000\u0000\u0000\u0005"+
		"5\u0001\u0000\u0000\u0000\u00077\u0001\u0000\u0000\u0000\t9\u0001\u0000"+
		"\u0000\u0000\u000b;\u0001\u0000\u0000\u0000\r=\u0001\u0000\u0000\u0000"+
		"\u000f?\u0001\u0000\u0000\u0000\u0011B\u0001\u0000\u0000\u0000\u0013G"+
		"\u0001\u0000\u0000\u0000\u0015M\u0001\u0000\u0000\u0000\u0017O\u0001\u0000"+
		"\u0000\u0000\u0019Q\u0001\u0000\u0000\u0000\u001bU\u0001\u0000\u0000\u0000"+
		"\u001dX\u0001\u0000\u0000\u0000\u001f^\u0001\u0000\u0000\u0000!~\u0001"+
		"\u0000\u0000\u0000#\u0080\u0001\u0000\u0000\u0000%\u008f\u0001\u0000\u0000"+
		"\u0000\'\u0091\u0001\u0000\u0000\u0000)\u009b\u0001\u0000\u0000\u0000"+
		"+\u009e\u0001\u0000\u0000\u0000-\u00a9\u0001\u0000\u0000\u0000/\u00b7"+
		"\u0001\u0000\u0000\u000012\u0005{\u0000\u00002\u0002\u0001\u0000\u0000"+
		"\u000034\u0005\n\u0000\u00004\u0004\u0001\u0000\u0000\u000056\u0005}\u0000"+
		"\u00006\u0006\u0001\u0000\u0000\u000078\u0005[\u0000\u00008\b\u0001\u0000"+
		"\u0000\u00009:\u0005]\u0000\u0000:\n\u0001\u0000\u0000\u0000;<\u0005("+
		"\u0000\u0000<\f\u0001\u0000\u0000\u0000=>\u0005)\u0000\u0000>\u000e\u0001"+
		"\u0000\u0000\u0000?@\u0005i\u0000\u0000@A\u0005f\u0000\u0000A\u0010\u0001"+
		"\u0000\u0000\u0000BC\u0005e\u0000\u0000CD\u0005l\u0000\u0000DE\u0005s"+
		"\u0000\u0000EF\u0005e\u0000\u0000F\u0012\u0001\u0000\u0000\u0000GH\u0005"+
		"w\u0000\u0000HI\u0005h\u0000\u0000IJ\u0005i\u0000\u0000JK\u0005l\u0000"+
		"\u0000KL\u0005e\u0000\u0000L\u0014\u0001\u0000\u0000\u0000MN\u0005=\u0000"+
		"\u0000N\u0016\u0001\u0000\u0000\u0000OP\u0005;\u0000\u0000P\u0018\u0001"+
		"\u0000\u0000\u0000QR\u0005f\u0000\u0000RS\u0005o\u0000\u0000ST\u0005r"+
		"\u0000\u0000T\u001a\u0001\u0000\u0000\u0000UV\u0005,\u0000\u0000V\u001c"+
		"\u0001\u0000\u0000\u0000WY\u0007\u0000\u0000\u0000XW\u0001\u0000\u0000"+
		"\u0000YZ\u0001\u0000\u0000\u0000ZX\u0001\u0000\u0000\u0000Z[\u0001\u0000"+
		"\u0000\u0000[\\\u0001\u0000\u0000\u0000\\]\u0006\u000e\u0000\u0000]\u001e"+
		"\u0001\u0000\u0000\u0000^_\u0007\u0001\u0000\u0000_ \u0001\u0000\u0000"+
		"\u0000`a\u0005i\u0000\u0000ab\u0005n\u0000\u0000b\u007f\u0005t\u0000\u0000"+
		"cd\u0005f\u0000\u0000de\u0005l\u0000\u0000ef\u0005o\u0000\u0000fg\u0005"+
		"a\u0000\u0000g\u007f\u0005t\u0000\u0000hi\u0005d\u0000\u0000ij\u0005o"+
		"\u0000\u0000jk\u0005u\u0000\u0000kl\u0005b\u0000\u0000lm\u0005l\u0000"+
		"\u0000m\u007f\u0005e\u0000\u0000no\u0005c\u0000\u0000op\u0005h\u0000\u0000"+
		"pq\u0005a\u0000\u0000q\u007f\u0005r\u0000\u0000rs\u0005b\u0000\u0000s"+
		"t\u0005o\u0000\u0000tu\u0005o\u0000\u0000u\u007f\u0005l\u0000\u0000vw"+
		"\u0005l\u0000\u0000wx\u0005o\u0000\u0000xy\u0005n\u0000\u0000y\u007f\u0005"+
		"g\u0000\u0000z{\u0005v\u0000\u0000{|\u0005o\u0000\u0000|}\u0005i\u0000"+
		"\u0000}\u007f\u0005d\u0000\u0000~`\u0001\u0000\u0000\u0000~c\u0001\u0000"+
		"\u0000\u0000~h\u0001\u0000\u0000\u0000~n\u0001\u0000\u0000\u0000~r\u0001"+
		"\u0000\u0000\u0000~v\u0001\u0000\u0000\u0000~z\u0001\u0000\u0000\u0000"+
		"\u007f\"\u0001\u0000\u0000\u0000\u0080\u0084\u0007\u0002\u0000\u0000\u0081"+
		"\u0083\u0007\u0003\u0000\u0000\u0082\u0081\u0001\u0000\u0000\u0000\u0083"+
		"\u0086\u0001\u0000\u0000\u0000\u0084\u0082\u0001\u0000\u0000\u0000\u0084"+
		"\u0085\u0001\u0000\u0000\u0000\u0085$\u0001\u0000\u0000\u0000\u0086\u0084"+
		"\u0001\u0000\u0000\u0000\u0087\u0088\u0005<\u0000\u0000\u0088\u0090\u0005"+
		"=\u0000\u0000\u0089\u008a\u0005>\u0000\u0000\u008a\u0090\u0005=\u0000"+
		"\u0000\u008b\u0090\u0007\u0004\u0000\u0000\u008c\u008d\u0005=\u0000\u0000"+
		"\u008d\u0090\u0005=\u0000\u0000\u008e\u0090\u0007\u0005\u0000\u0000\u008f"+
		"\u0087\u0001\u0000\u0000\u0000\u008f\u0089\u0001\u0000\u0000\u0000\u008f"+
		"\u008b\u0001\u0000\u0000\u0000\u008f\u008c\u0001\u0000\u0000\u0000\u008f"+
		"\u008e\u0001\u0000\u0000\u0000\u0090&\u0001\u0000\u0000\u0000\u0091\u0096"+
		"\u0005\"\u0000\u0000\u0092\u0095\u0003)\u0014\u0000\u0093\u0095\t\u0000"+
		"\u0000\u0000\u0094\u0092\u0001\u0000\u0000\u0000\u0094\u0093\u0001\u0000"+
		"\u0000\u0000\u0095\u0098\u0001\u0000\u0000\u0000\u0096\u0097\u0001\u0000"+
		"\u0000\u0000\u0096\u0094\u0001\u0000\u0000\u0000\u0097\u0099\u0001\u0000"+
		"\u0000\u0000\u0098\u0096\u0001\u0000\u0000\u0000\u0099\u009a\u0005\"\u0000"+
		"\u0000\u009a(\u0001\u0000\u0000\u0000\u009b\u009c\u0005\\\u0000\u0000"+
		"\u009c\u009d\u0007\u0006\u0000\u0000\u009d*\u0001\u0000\u0000\u0000\u009e"+
		"\u009f\u0005/\u0000\u0000\u009f\u00a0\u0005/\u0000\u0000\u00a0\u00a4\u0001"+
		"\u0000\u0000\u0000\u00a1\u00a3\t\u0000\u0000\u0000\u00a2\u00a1\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a6\u0001\u0000\u0000\u0000\u00a4\u00a5\u0001\u0000"+
		"\u0000\u0000\u00a4\u00a2\u0001\u0000\u0000\u0000\u00a5\u00a7\u0001\u0000"+
		"\u0000\u0000\u00a6\u00a4\u0001\u0000\u0000\u0000\u00a7\u00a8\u0006\u0015"+
		"\u0000\u0000\u00a8,\u0001\u0000\u0000\u0000\u00a9\u00aa\u0005/\u0000\u0000"+
		"\u00aa\u00ab\u0005*\u0000\u0000\u00ab\u00af\u0001\u0000\u0000\u0000\u00ac"+
		"\u00ae\t\u0000\u0000\u0000\u00ad\u00ac\u0001\u0000\u0000\u0000\u00ae\u00b1"+
		"\u0001\u0000\u0000\u0000\u00af\u00b0\u0001\u0000\u0000\u0000\u00af\u00ad"+
		"\u0001\u0000\u0000\u0000\u00b0\u00b2\u0001\u0000\u0000\u0000\u00b1\u00af"+
		"\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005*\u0000\u0000\u00b3\u00b4\u0005"+
		"/\u0000\u0000\u00b4\u00b5\u0001\u0000\u0000\u0000\u00b5\u00b6\u0006\u0016"+
		"\u0000\u0000\u00b6.\u0001\u0000\u0000\u0000\u00b7\u00bb\u0007\u0007\u0000"+
		"\u0000\u00b8\u00ba\u0007\b\u0000\u0000\u00b9\u00b8\u0001\u0000\u0000\u0000"+
		"\u00ba\u00bd\u0001\u0000\u0000\u0000\u00bb\u00b9\u0001\u0000\u0000\u0000"+
		"\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bc0\u0001\u0000\u0000\u0000\u00bd"+
		"\u00bb\u0001\u0000\u0000\u0000\n\u0000Z~\u0084\u008f\u0094\u0096\u00a4"+
		"\u00af\u00bb\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}